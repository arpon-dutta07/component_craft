{
  "name": "auth-form",
  "type": "registry:component",
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Loader2, LockIcon } from \"lucide-react\";\n\nexport function AuthForm() {\n    const [isLoading, setIsLoading] = useState(false);\n\n    async function handleSubmit(e: React.FormEvent) {\n        e.preventDefault();\n        setIsLoading(true);\n\n        const formData = new FormData(e.target as HTMLFormElement);\n        const email = formData.get(\"email\") as string;\n        const password = formData.get(\"password\") as string;\n\n        try {\n            /**\n             * To update with your actual authentication logic\n             */\n            await new Promise((resolve) => setTimeout(resolve, 2000));\n            console.log(\"Signing in with:\", email, password);\n        } catch (error) {\n            console.error(\"Authentication error:\", error);\n        } finally {\n            setIsLoading(false);\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit} className=\"space-y-4\" noValidate>\n            <div className=\"space-y-2\">\n                <label\n                    htmlFor=\"email\"\n                    className=\"text-sm font-medium text-black dark:text-white\"\n                >\n                    Email\n                </label>\n                <div className=\"relative\">\n                    <span className=\"absolute left-3 top-1/2 -translate-y-1/2 text-gray-500 flex items-center justify-center w-4 h-4\">\n                        @\n                    </span>\n                    <Input\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"name@example.com\"\n                        required\n                        disabled={isLoading}\n                        className=\"pl-10 h-12 bg-background ring-offset-background placeholder:text-muted-foreground focus-visible:ring-1 focus-visible:ring-ring\"\n                        autoComplete=\"email\"\n                    />\n                </div>\n            </div>\n\n            <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium text-black dark:text-white\">\n                    Password\n                </label>\n                <div className=\"relative\">\n                    <LockIcon className=\"absolute left-3 top-1/2 -translate-y-1/2 h-4 w-4 text-gray-500\" />\n                    <Input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Enter your password\"\n                        required\n                        disabled={isLoading}\n                        className=\"pl-10 h-12 bg-background ring-offset-background placeholder:text-muted-foreground focus-visible:ring-1 focus-visible:ring-ring\"\n                    />\n                </div>\n            </div>\n\n            <Button\n                type=\"submit\"\n                disabled={isLoading}\n                className=\"w-full h-12 text-base font-medium bg-black text-white hover:bg-neutral-800 dark:bg-white dark:text-black dark:hover:bg-neutral-200 transition-colors\"\n            >\n                {isLoading && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                {isLoading ? \"Signing in...\" : \"Sign in\"}\n            </Button>\n        </form>\n    );\n}\n",
      "path": "components/componentcraftui/blocks/auth-basic/auth-form.tsx",
      "target": "components/componentcraft/auth-form.tsx"
    }
  ],
  "category": "auth-basic",
  "subcategory": "component",
  "description": "auth-form component"
}