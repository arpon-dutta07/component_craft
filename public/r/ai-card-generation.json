{
  "name": "ai-card-generation",
  "type": "registry:component",
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { Preview } from \"./preview-generation\";\nimport { ErrorGeneration } from \"./error-generation\";\nimport { FormGeneration } from \"./form-generation\";\nimport { HeaderGeneration } from \"./header-generation\";\n\ninterface CardSettings {\n    style: string;\n    backgroundColor: string;\n    lighting: string;\n    pose: string;\n    aspectRatio: string;\n}\n\nexport default function AICardGeneration() {\n    const [showForm, setShowForm] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [settings, setSettings] = useState<CardSettings>({\n        style: \"artistic\",\n        backgroundColor: \"studio\",\n        lighting: \"studio\",\n        pose: \"profile\",\n        aspectRatio: \"4:5\",\n    });\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        setShowForm(false);\n        setIsLoading(true);\n        setError(null);\n\n        try {\n            await new Promise((resolve) => setTimeout(resolve, 3000));\n            setShowForm(false);\n        } catch (err) {\n            setError(\"Failed to generate video. Please try again.\");\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const handleBackToSettings = () => {\n        setShowForm(true);\n        setError(null);\n    };\n\n    return (\n        <div className=\"group relative overflow-hidden w-full max-w-sm bg-white dark:bg-zinc-900 border border-zinc-200 dark:border-zinc-800 rounded-2xl transition-all duration-300 hover:shadow-[0_8px_30px_rgb(0,0,0,0.12)] dark:hover:shadow-[0_8px_30px_rgb(0,0,0,0.2)] min-h-[500px] flex flex-col justify-between gap-2\">\n            <HeaderGeneration />\n            <div className=\"flex-1 overflow-hidden flex flex-col\">\n                {error && <ErrorGeneration error={error} />}\n\n                {showForm ? (\n                    <FormGeneration\n                        onSubmit={handleSubmit}\n                        settings={settings}\n                        onSettingsChange={setSettings}\n                    />\n                ) : (\n                    <div className=\"p-4\">\n                        <Preview\n                            isLoading={isLoading}\n                            imageUrl=\"https://ferf1mheo22r9ira.public.blob.vercel-storage.com/profile-mjss82WnWBRO86MHHGxvJ2TVZuyrDv.jpeg\"\n                        />\n\n                        {!isLoading && (\n                            <div className=\"space-y-4\">\n                                <div className=\"p-3 space-y-2 bg-zinc-50 dark:bg-zinc-800/50 rounded-xl\">\n                                    <div className=\"flex justify-between text-sm\">\n                                        <span className=\"text-zinc-500\">\n                                            Quality\n                                        </span>\n                                        <span className=\"text-zinc-900 dark:text-zinc-100\">\n                                            1080p\n                                        </span>\n                                    </div>\n                                    <div className=\"flex justify-between text-sm\">\n                                        <span className=\"text-zinc-500\">\n                                            Duration\n                                        </span>\n                                        <span className=\"text-zinc-900 dark:text-zinc-100\">\n                                            00:07\n                                        </span>\n                                    </div>\n                                </div>\n\n                                <div className=\"flex items-center justify-between gap-2\">\n                                    <button\n                                        type=\"button\"\n                                        onClick={handleBackToSettings}\n                                        className=\"w-full h-9 flex items-center justify-center gap-2 border border-zinc-200 dark:border-zinc-700 text-zinc-900 dark:text-zinc-100 text-sm font-medium rounded-xl hover:bg-zinc-50 dark:hover:bg-zinc-800 transition-colors\"\n                                    >\n                                        Back to Settings\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        className=\"w-full h-9 flex items-center justify-center gap-2 bg-zinc-900 hover:bg-zinc-800 dark:bg-white dark:hover:bg-zinc-100 dark:text-zinc-900 text-white text-sm font-medium rounded-xl transition-colors\"\n                                    >\n                                        Download\n                                    </button>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n",
      "path": "components/componentcraftui/blocks/ai-card-generation/ai-card-generation.tsx",
      "target": "components/componentcraft/ai-card-generation.tsx"
    }
  ],
  "category": "ai-card-generation",
  "subcategory": "component",
  "description": "ai-card-generation component"
}