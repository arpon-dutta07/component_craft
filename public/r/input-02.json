{
  "name": "input-02",
  "type": "registry:component",
  "files": [
    {
      "type": "registry:component",
      "content": "// Input - AI Suggestion (type + dropdown suggestions like agents)\n\"use client\"\n\nimport { useEffect, useMemo, useRef, useState } from \"react\"\nimport { Sparkles, Search, Check } from \"lucide-react\"\nimport { AnimatePresence, motion } from \"framer-motion\"\nimport { cn } from \"@/lib/utils\"\n\nconst SUGGESTIONS = [\n  \"Draft a welcome email\",\n  \"Summarize this paragraph\",\n  \"Generate title ideas\",\n  \"Improve clarity and tone\",\n  \"Rewrite to be concise\",\n  \"Translate to Spanish\",\n  \"Create an outline\",\n  \"Suggest alternatives\",\n]\n\nexport default function InputAISuggestion() {\n  const [value, setValue] = useState(\"\")\n  const [open, setOpen] = useState(false)\n  const [active, setActive] = useState(0)\n  const listRef = useRef<HTMLDivElement>(null)\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  const items = useMemo(() => {\n    const q = value.trim().toLowerCase()\n    if (!q) return SUGGESTIONS.slice(0, 5)\n    return SUGGESTIONS.filter((s) => s.toLowerCase().includes(q)).slice(0, 7)\n  }, [value])\n\n  useEffect(() => {\n    setActive(0)\n  }, [value])\n\n  const commit = (text: string) => {\n    setValue(text)\n    setOpen(false)\n    inputRef.current?.focus()\n  }\n\n  return (\n    <div className=\"w-full max-w-md space-y-1.5\">\n      <label className=\"text-sm font-medium text-zinc-300\">Ask AI</label>\n      <div\n        className={cn(\n          \"relative flex items-center rounded-lg border bg-black/50\",\n          \"border-zinc-800 focus-within:border-indigo-500 focus-within:ring-2 focus-within:ring-indigo-500/20\",\n        )}\n      >\n        <div className=\"pl-3 text-zinc-500\">\n          <Search className=\"h-4 w-4\" />\n        </div>\n        <input\n          ref={inputRef}\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value)\n            setOpen(true)\n          }}\n          onFocus={() => setOpen(true)}\n          onKeyDown={(e) => {\n            if (!open && (e.key === \"ArrowDown\" || e.key === \"ArrowUp\")) setOpen(true)\n            if (e.key === \"ArrowDown\") {\n              e.preventDefault()\n              setActive((a) => Math.min(a + 1, items.length - 1))\n            }\n            if (e.key === \"ArrowUp\") {\n              e.preventDefault()\n              setActive((a) => Math.max(a - 1, 0))\n            }\n            if (e.key === \"Enter\" && open) {\n              e.preventDefault()\n              commit(items[active] ?? value)\n            }\n            if (e.key === \"Escape\") {\n              setOpen(false)\n            }\n          }}\n          placeholder=\"What should I help with?\"\n          className=\"w-full bg-transparent px-3 py-2 text-sm text-zinc-100 placeholder:text-zinc-500 focus:outline-hidden\"\n          role=\"combobox\"\n          aria-expanded=\"false\"\n          aria-controls=\"ai-suggestions\"\n          aria-activedescendant=\"\"\n        />\n        <button\n          type=\"button\"\n          onClick={() => commit(value || \"Draft a welcome email\")}\n          className=\"m-1 inline-flex items-center gap-1 rounded-md bg-indigo-600 px-2.5 py-1.5 text-xs font-medium text-white hover:bg-indigo-500\"\n          aria-label=\"Use AI suggestion\"\n        >\n          <Sparkles className=\"h-3.5 w-3.5\" />\n          Suggest\n        </button>\n\n        <AnimatePresence>\n          {open && items.length > 0 && (\n            <motion.div\n              id=\"ai-suggestions\"\n              initial={{ opacity: 0, y: -4 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -4 }}\n              className=\"absolute z-10 mt-1 w-full translate-y-full rounded-lg border border-zinc-800 bg-zinc-950 shadow-lg\"\n              style={{ bottom: \"-0.5rem\" }}\n              ref={listRef}\n            >\n              <div role=\"listbox\" aria-label=\"AI suggestions\">\n                {items.map((s, i) => (\n                  <div\n                    key={s}\n                    id={`ai-opt-${i}`}\n                    role=\"option\"\n                    aria-selected=\"false\"\n                    onMouseEnter={() => setActive(i)}\n                    onClick={() => commit(s)}\n                    className={cn(\n                      \"flex w-full items-center justify-between px-3 py-2 text-left text-sm cursor-pointer\",\n                      i === active ? \"bg-zinc-900 text-zinc-100\" : \"text-zinc-300 hover:bg-zinc-900\",\n                    )}\n                  >\n                    <span>{s}</span>\n                    {i === active && <Check className=\"h-4 w-4 text-emerald-500\" />}\n                  </div>\n                ))}\n              </div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n      </div>\n      <p className=\"text-xs text-zinc-500\">Type to see suggestions. Use ↑/↓ and Enter.</p>\n    </div>\n  )\n}\n",
      "path": "components/componentcraftui/input/input-02.tsx",
      "target": "components/componentcraft/input-02.tsx"
    }
  ],
  "category": "input",
  "subcategory": "component",
  "description": "input-02 component"
}