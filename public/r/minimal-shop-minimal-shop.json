{
  "name": "minimal-shop-minimal-shop",
  "type": "registry:component",
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\n\nimport { motion, AnimatePresence } from \"motion/react\";\nimport { useState } from \"react\";\nimport { ProductGrid } from \"./product-grid\";\nimport { CartDrawer } from \"./cart-drawer\";\nimport { ProductModal } from \"./product-modal\";\nimport { TopBar } from \"./top-bar\";\nimport { type Product, type CartItem, products } from \"./data\";\n\nexport default function MinimalShop() {\n    const [cart, setCart] = useState<CartItem[]>([]);\n    const [selectedProduct, setSelectedProduct] = useState<Product | null>(\n        null\n    );\n    const [isCartOpen, setIsCartOpen] = useState(false);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n\n    const addToCart = (product: Product, quantity: number = 1) => {\n        setCart((prev) => {\n            const exists = prev.find((item) => item.id === product.id);\n            if (exists) {\n                return prev.map((item) =>\n                    item.id === product.id\n                        ? { ...item, quantity: item.quantity + quantity }\n                        : item\n                );\n            }\n            return [...prev, { ...product, quantity }];\n        });\n    };\n\n    const removeFromCart = (productId: string) => {\n        setCart((prev) => prev.filter((item) => item.id !== productId));\n    };\n\n    const filteredProducts = products.filter((product) =>\n        product.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n\n    return (\n        <div className=\"h-screen bg-zinc-50 dark:bg-zinc-950\">\n            <TopBar\n                cartItemCount={cart.length}\n                onCartClick={() => setIsCartOpen(true)}\n                onSearch={setSearchQuery}\n            />\n\n            <div className=\"mx-auto px-2 pt-12 pb-16\">\n                <ProductGrid\n                    products={filteredProducts}\n                    onProductSelect={setSelectedProduct}\n                />\n            </div>\n\n            <AnimatePresence>\n                {selectedProduct && (\n                    <ProductModal\n                        product={selectedProduct}\n                        onClose={() => setSelectedProduct(null)}\n                        onAddToCart={(product) => {\n                            addToCart(product);\n                            setSelectedProduct(null);\n                            setIsCartOpen(true);\n                        }}\n                    />\n                )}\n            </AnimatePresence>\n\n            <AnimatePresence>\n                {isCartOpen && (\n                    <CartDrawer\n                        cart={cart}\n                        onClose={() => setIsCartOpen(false)}\n                        onRemoveFromCart={removeFromCart}\n                    />\n                )}\n            </AnimatePresence>\n        </div>\n    );\n}\n",
      "path": "components/componentcraftui/blocks/minimal-shop/minimal-shop.tsx",
      "target": "components/componentcraft/minimal-shop.tsx"
    }
  ],
  "category": "minimal-shop",
  "subcategory": "component",
  "description": "minimal-shop-minimal-shop component"
}